/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package soft252.referral.library.system;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static soft252.referral.library.system.accountCreator.resourceList;
import static soft252.referral.library.system.accountCreator.userList;

/**
 *
 * @author Gearing
 */
public class userBorrowedResources extends javax.swing.JFrame {

    
    String currentUser;
    /**
     * Creates new form userBorrowedResources
     */
    public userBorrowedResources() {
        initComponents();
        showBorrowedResources(currentUser);
    }
    
    public userBorrowedResources(String User) {
        currentUser = User;
        initComponents();
        showBorrowedResources(currentUser);
        //currentUser = User;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        userBorrowed = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        userBorrowed.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Category", "Title", "Days left of rental", "Resource Type"
            }
        ));
        jScrollPane1.setViewportView(userBorrowed);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("Return Selected Resource");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:]
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        returnResource();
        //showBorrowedResources(currentUser);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(userBorrowedResources.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(userBorrowedResources.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(userBorrowedResources.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(userBorrowedResources.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new userBorrowedResources().setVisible(true);
            }
        });
    }
    
    private void showBorrowedResources(String thisUser){
        DefaultTableModel tableModel = (DefaultTableModel) userBorrowed.getModel();
        
        Object rowData[] = new Object[4];
        
        System.out.println("showBorrowedResources called successfully");
        
        for (Client user : userList){
            //System.out.println("------------------");
            //System.out.println(user.ID);
            //System.out.println(thisUser);
            if (thisUser.equals(user.ID)){
                //System.out.println("Client Match for borrowed resources");
                for (Object resourceBorrowed : user.resourcesBorrowed){
                    for (resources resource : resourceList){
                        if (resourceBorrowed.equals(resource.title)){
                            rowData[0] = resource.catagorey;
                            rowData[1] = resource.title;
                            rowData[2] = resource.daysBorrowed;
                            rowData[3] = resource.resourceType;
                            tableModel.addRow(rowData);
                        }
                    }
                }
            }
        }
    }
    
    private void returnResource(){
        int column = 1;
        int row = userBorrowed.getSelectedRow();
        String selectedResource = userBorrowed.getValueAt(row, column).toString();
        System.out.println(selectedResource);
        
        for (Client user : userList){
            //System.out.println("------------------");
            //System.out.println(user.ID);
            //System.out.println(thisUser);
            if (currentUser.equals(user.ID)){
                //System.out.println("Client Match for borrowed resources");
                for (Object resourceBorrowed : user.resourcesBorrowed){
                    System.out.println("-------");
                    System.out.println(user.resourcesBorrowed);
                    if (selectedResource.equals(resourceBorrowed)){
                        user.resourcesBorrowed.remove(resourceBorrowed);
                        System.out.println(user.resourcesBorrowed);
                        DefaultTableModel tableModel = (DefaultTableModel) userBorrowed.getModel();
                        tableModel.setRowCount(0);
                        showBorrowedResources(currentUser);
                    }
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable userBorrowed;
    // End of variables declaration//GEN-END:variables
}
