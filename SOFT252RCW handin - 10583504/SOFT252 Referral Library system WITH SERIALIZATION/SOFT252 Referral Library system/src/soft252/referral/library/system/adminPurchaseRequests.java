/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package soft252.referral.library.system;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static soft252.referral.library.system.accountCreator.resourceList;
import static soft252.referral.library.system.accountCreator.resourceRequestList;
import static soft252.referral.library.system.accountCreator.userList;

/**
 *
 * @author Gearing
 */
public class adminPurchaseRequests extends javax.swing.JFrame {

    /**
     * Creates new form adminPurchaseRequests
     */
    public adminPurchaseRequests() throws ClassNotFoundException {
        initComponents();
        showPurchaseRequests();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        purchaseRequestTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        purchaseRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title", "Resource Type"
            }
        ));
        jScrollPane1.setViewportView(purchaseRequestTable);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Approve");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("Deny");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Object toBeRemoved = null;
        int column = 0;
        int row = purchaseRequestTable.getSelectedRow();
        String selectedResource = purchaseRequestTable.getValueAt(row, column).toString();
        
        for (resources resource : resourceRequestList){
            if (selectedResource.equals(resource.title)){
                toBeRemoved = resource;
            }
        }
        resourceRequestList.remove(toBeRemoved);
        JOptionPane.showMessageDialog(rootPane, "The purchase request for " + selectedResource + " has been approved");
        try {
         FileOutputStream fileOut = new FileOutputStream("resourceRequests.ser");
         ObjectOutputStream out = new ObjectOutputStream(fileOut);
         out.writeObject(accountCreator.resourceRequestList);
         out.close();
         fileOut.close();
         System.out.printf("Serialized data is saved in SOFT252-Referral-Library-system\\SOFT252 Referral Library system\\resourceRequests.ser");
        } 
        catch (IOException i) {
         i.printStackTrace();
        }
        DefaultTableModel tableModel = (DefaultTableModel) purchaseRequestTable.getModel();
        tableModel.setRowCount(0);
        try {
            showPurchaseRequests();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(adminPurchaseRequests.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Object toBeRemoved = null;
        int column = 0;
        int row = purchaseRequestTable.getSelectedRow();
        String selectedResource = purchaseRequestTable.getValueAt(row, column).toString();
        
        for (resources resource : resourceRequestList){
            if (selectedResource.equals(resource.title)){
                toBeRemoved = resource;
            }
        }
        resourceRequestList.remove(toBeRemoved);
        JOptionPane.showMessageDialog(rootPane, "The purchase request for " + selectedResource + " has been denied");
        try {
         FileOutputStream fileOut = new FileOutputStream("resourceRequests.ser");
         ObjectOutputStream out = new ObjectOutputStream(fileOut);
         out.writeObject(accountCreator.resourceRequestList);
         out.close();
         fileOut.close();
         System.out.printf("Serialized data is saved in SOFT252-Referral-Library-system\\SOFT252 Referral Library system\\resourceRequests.ser");
        } 
        catch (IOException i) {
         i.printStackTrace();
        }
        DefaultTableModel tableModel = (DefaultTableModel) purchaseRequestTable.getModel();
        tableModel.setRowCount(0);
        try {
            showPurchaseRequests();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(adminPurchaseRequests.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminPurchaseRequests.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminPurchaseRequests.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminPurchaseRequests.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminPurchaseRequests.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new adminPurchaseRequests().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(adminPurchaseRequests.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    private void showPurchaseRequests() throws ClassNotFoundException{
        try {
            FileInputStream fileIn = new FileInputStream("resourceRequests.ser");
            ObjectInputStream in = new ObjectInputStream(fileIn);
            accountCreator.resourceRequestList = (List<resources>) in.readObject();
            in.close();
            fileIn.close();
            System.out.println("loaded resourceRequests");
        } 
        catch (IOException i) {
            i.printStackTrace();
            return;
        }
        
        DefaultTableModel tableModel = (DefaultTableModel) purchaseRequestTable.getModel();
        
        Object rowData[] = new Object[2];
        
        for (resources resource : resourceRequestList){
            if (resource.borrowed == false){
                rowData[0] = resource.title;
                rowData[1] = resource.resourceType;
                tableModel.addRow(rowData);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable purchaseRequestTable;
    // End of variables declaration//GEN-END:variables
}
